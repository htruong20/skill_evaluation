<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_424363_ski_eva_1_cert_acquisition</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_424363_ski_eva_1_cert_acquisition">certificateVALCHANGES^EQ<item endquery="false" field="certificate" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>SE_Certificate_Unique</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/*
 * Description:
 *  check whether new certificate is unique or not
 *  
 */

(function executeRule(current, previous /*null when async*/) {
	// get whole tb
	var tb_cert_acquition = new GlideRecord('x_424363_ski_eva_1_cert_acquisition');
	
	// true if submission already existed
	tb_cert_acquition.addQuery('submission', current.submission);
	
	// true if certificate already existed
	tb_cert_acquition.addQuery('certificate', current.certificate);
	tb_cert_acquition.query();
	
	if(tb_cert_acquition.hasNext()) {
		// true if record already existed
		current.setAbortAction(true); 
		gs.addErrorMessage('Certificate already existed.' + ' Certificates added in a submission must be unique.');
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-12-09 04:47:16</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b686c62207a100101531f7108c1ed082</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>SE_Certificate_Unique</sys_name>
        <sys_overrides/>
        <sys_package display_value="Skill Evaluation" source="x_424363_ski_eva_1">f8037c7c072900101531f7108c1ed08f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Skill Evaluation">f8037c7c072900101531f7108c1ed08f</sys_scope>
        <sys_update_name>sys_script_b686c62207a100101531f7108c1ed082</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-12-16 08:26:11</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b686c62207a100101531f7108c1ed082"/>
</record_update>
